---
- name: provision an Database Server Ec2 Instance
  hosts: localhost
  connection: local
  tags: provisioning
  vars_files:
      - group_vars/db-ec2.yml
  vars:
      instance_type: "{{ instancetype }}"
      image: "{{ AMI }}"
      security_group: "{{ security_group_name }}"
      region: "{{ region_name }}"
      gpname: "{{ IAM_groupname }}"
      keypair: "{{ keypair_name }}"
      state: present
      number: 1
#      aws_access_key: "{{ aws_access_key }}"
#      aws_secret_key: "{{ aws_secret_key }}"
      aws_tags:
         NAME: "{{ requestor_name }}"
         ENVIRONMENT: "{{ env_name }}"
         RESOURCE ID: "{{ resource_name }}"
         BACK UP: "{{ back_up }}"
         BUSINESS HOURS: "{{ business_hours }}"
         AUTOMATE: "{{ automate }}"
         OWNER: "{{ owner }}"
         COST CENTER: "{{ cost_center_name }}"
         CUSTOMER: "{{ customer_name }}"
  tasks:
    - name: Create Database server Intsance
      ec2:
         group: "{{ security_group }}"
         instance_type: "{{instance_type}}"
         image: "{{image}}"
#         aws_access_key: "{{aws_access_key}}"
#         aws_secret_key: "{{aws_secret_key}}"
         region: "{{region}}"
         wait: true
         exact_count: "{{number}}"
         count_tag:
           Name: "{{gpname}}"
         instance_tags: "{{ aws_tags }}"
         vpc_subnet_id: "{{ vpc_subnet_id }}"
         key_name: "{{keypair}}"
         group_id: "{{ privatesg.group_id }}"
      register: ec2_db

#    - debug:
#        msg: "db-server  private  ip address is: {{ec2_db.instances[0].private_ip}}"

#    - name: wait for ssh to come up
#      local_action: wait_for
#                    host={{ec2_db.instances[0].private_ip}}
#                    port=22
#                    state=started
#      with_items: ec2.instances
